{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jed00\\\\Documents\\\\PROTO_REACT_EXPRESS\\\\frontend\\\\src\\\\App.js\";\nimport React, { createRef } from \"react\";\nimport './App.css';\nimport raw from './frontend/assets/sample.txt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const fileInput = /*#__PURE__*/createRef();\n  fetch(raw).then(r => r.text()).then(text => {\n    console.log(text.decoded, text);\n  });\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set(\"avatar\", fileInput.current.files[0]);\n    try {\n      const response = await fetch('/profile', {\n        method: \"POST\",\n        body: formData\n      });\n      const parsedResponse = await response.json();\n      if (response.ok) {\n        alert(\"File uploaded\");\n      } else {\n        console.error(\"some error occured\");\n      }\n    } catch (e) {\n      console.error(e.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Single File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"avatar\",\n        ref: fileInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 4\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","createRef","raw","jsxDEV","_jsxDEV","App","fileInput","fetch","then","r","text","console","log","decoded","onSubmit","e","preventDefault","formData","FormData","set","current","files","response","method","body","parsedResponse","json","ok","alert","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","ref","value","_c","$RefreshReg$"],"sources":["C:/Users/jed00/Documents/PROTO_REACT_EXPRESS/frontend/src/App.js"],"sourcesContent":["import React, {createRef} from \"react\";\nimport './App.css';\nimport raw from './frontend/assets/sample.txt';\n\nfunction App() {\n  const fileInput = createRef();\n  \n  fetch(raw)\n  .then(r=>r.text())\n  .then(text=>{\n    console.log(text.decoded, text);\n  })\n  \n\n   const onSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set(\"avatar\", fileInput.current.files[0]);\n   \n    try{\n        const response = await fetch('/profile',{\n            method: \"POST\",\n            body: formData\n        });\n\n        const parsedResponse = await response.json();\n        if (response.ok) {\n            alert(\"File uploaded\");\n        } else {\n            console.error(\"some error occured\");\n        }\n    }catch (e) {\n        console.error(e.message)\n    }\n}\n\n\n   \n\n   return (\n   <div>\n      <h2>Single File Upload</h2>\n           <form onSubmit={onSubmit}>\n                <input type=\"file\" name=\"avatar\" ref={fileInput}/>\n                <input type=\"submit\" value=\"Submit\"/>\n           </form>\n   </div>\n   );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAO,WAAW;AAClB,OAAOC,GAAG,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,SAAS,gBAAGL,SAAS,CAAC,CAAC;EAE7BM,KAAK,CAACL,GAAG,CAAC,CACTM,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACjBF,IAAI,CAACE,IAAI,IAAE;IACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,OAAO,EAAEH,IAAI,CAAC;EACjC,CAAC,CAAC;EAGD,MAAMI,QAAQ,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,GAAG,CAAC,QAAQ,EAAEb,SAAS,CAACc,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAElD,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAAC,UAAU,EAAC;QACpCgB,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEP;MACV,CAAC,CAAC;MAEF,MAAMQ,cAAc,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAC5C,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACbC,KAAK,CAAC,eAAe,CAAC;MAC1B,CAAC,MAAM;QACHjB,OAAO,CAACkB,KAAK,CAAC,oBAAoB,CAAC;MACvC;IACJ,CAAC,QAAOd,CAAC,EAAE;MACPJ,OAAO,CAACkB,KAAK,CAACd,CAAC,CAACe,OAAO,CAAC;IAC5B;EACJ,CAAC;EAKE,oBACA1B,OAAA;IAAA2B,QAAA,gBACG3B,OAAA;MAAA2B,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB/B,OAAA;MAAMU,QAAQ,EAAEA,QAAS;MAAAiB,QAAA,gBACpB3B,OAAA;QAAOgC,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,GAAG,EAAEhC;MAAU;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAClD/B,OAAA;QAAOgC,IAAI,EAAC,QAAQ;QAACG,KAAK,EAAC;MAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAET;AAACK,EAAA,GA5CQnC,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}