{"ast":null,"code":"import React,{useRef,useEffect}from'react';import{predators,grazers,map1,plants,obstacles}from'./InitialFile.js';import{jsx as _jsx}from\"react/jsx-runtime\";function drawLine(ctx,x1,y1,x2,y2,bColor){ctx.beginPath();ctx.moveTo(x1,y1);ctx.lineTo(x2,y2);ctx.lineWidth=.5;ctx.strokeStyle=bColor;ctx.fillStyle=bColor;ctx.fill();ctx.stroke();};//draws a big line that looks like a square\nfunction drawBlock(ctx,x1,y1,bColor){ctx.beginPath();ctx.moveTo(x1,y1+5);ctx.lineTo(x1+10,y1+5);ctx.lineWidth=10;ctx.strokeStyle=bColor;ctx.stroke();};function drawCircle(ctx,x1,y1,d1,bColor){ctx.beginPath();ctx.arc(x1+5,y1+5,d1/2,0,2*Math.PI);ctx.lineWidth=1;ctx.strokeStyle=bColor;ctx.fillStyle=bColor;ctx.fill();ctx.stroke();};const Canvas=props=>{const canvasRef=useRef(null);useEffect(()=>{const canvas=canvasRef.current;const context=canvas.getContext('2d');context.canvas.width=map1.width;context.canvas.height=map1.height;context.canvas.style=\"border:1px solid #000000;\";//Our draw come here\nfor(let i=25;i<context.canvas.width;i+=25){drawLine(context,i,0,i,context.canvas.height,\"black\");}for(let i=25;i<context.canvas.height;i+=25){drawLine(context,0,i,context.canvas.width,i,\"#000000\");}for(let i=0;i<map1.num_plants;i++){drawCircle(context,plants[i].x_coord,plants[i].y_coord,plants[i].diam,\"green\");}for(let i=0;i<map1.num_obstacles;i++){drawCircle(context,obstacles[i].x_coord,obstacles[i].y_coord,obstacles[i].diam,\"grey\");}for(let i=0;i<map1.num_grazers;i++){drawBlock(context,grazers[i].x_coord,grazers[i].y_coord,\"blue\");}for(let i=0;i<map1.num_predators;i++){drawBlock(context,predators[i].x_coord,predators[i].y_coord,\"red\");}//draw(context), [draw]\n});return/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,...props});};export default Canvas;","map":{"version":3,"names":["React","useRef","useEffect","predators","grazers","map1","plants","obstacles","jsx","_jsx","drawLine","ctx","x1","y1","x2","y2","bColor","beginPath","moveTo","lineTo","lineWidth","strokeStyle","fillStyle","fill","stroke","drawBlock","drawCircle","d1","arc","Math","PI","Canvas","props","canvasRef","canvas","current","context","getContext","width","height","style","i","num_plants","x_coord","y_coord","diam","num_obstacles","num_grazers","num_predators","ref"],"sources":["C:/Users/jed00/Documents/PROTO_REACT_EXPRESS/frontend/src/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport {predators, grazers, map1, plants, obstacles} from './InitialFile.js';\r\nfunction drawLine(ctx, x1, y1, x2, y2, bColor)\r\n{\r\n  ctx.beginPath();\r\n  ctx.moveTo(x1, y1);\r\n  ctx.lineTo(x2, y2);\r\n  ctx.lineWidth = .5;\r\n  ctx.strokeStyle = bColor;\r\n  ctx.fillStyle = bColor;\r\n  ctx.fill();\r\n  ctx.stroke();\r\n};\r\n  \r\n    //draws a big line that looks like a square\r\nfunction drawBlock(ctx, x1, y1, bColor)\r\n{\r\n  ctx.beginPath();\r\n  ctx.moveTo(x1, y1+5);\r\n  ctx.lineTo(x1+10, y1+5);\r\n  ctx.lineWidth = 10;\r\n  ctx.strokeStyle = bColor;\r\n  ctx.stroke();\r\n};\r\n\r\nfunction drawCircle(ctx, x1, y1, d1, bColor)\r\n{\r\n  ctx.beginPath();\r\n  ctx.arc(x1+5, y1+5, d1/2, 0, 2*Math.PI);\r\n  ctx.lineWidth = 1;\r\n  ctx.strokeStyle = bColor;\r\n  ctx.fillStyle = bColor;\r\n  ctx.fill();\r\n  ctx.stroke();\r\n};\r\n\r\n\r\nconst Canvas = props => {\r\n    const canvasRef = useRef(null)    \r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current\r\n      const context = canvas.getContext('2d')\r\n      context.canvas.width = map1.width;\r\n      context.canvas.height = map1.height;\r\n      context.canvas.style = \"border:1px solid #000000;\";\r\n\r\n      //Our draw come here\r\n\r\n      for(let i = 25; i < context.canvas.width; i+=25)\r\n      {\r\n        drawLine(context, i, 0, i, context.canvas.height, \"black\");\r\n      }\r\n      for(let i = 25; i < context.canvas.height; i+=25)\r\n      {\r\n        drawLine(context, 0, i, context.canvas.width, i, \"#000000\");\r\n      }\r\n\r\n      for (let i = 0; i < map1.num_plants; i++)\r\n      {\r\n        drawCircle(context, plants[i].x_coord, plants[i].y_coord, plants[i].diam,\"green\");\r\n      }\r\n      for (let i = 0; i < map1.num_obstacles; i++)\r\n      {\r\n        drawCircle(context, obstacles[i].x_coord, obstacles[i].y_coord, obstacles[i].diam,\"grey\");\r\n      }\r\n      for (let i = 0; i < map1.num_grazers; i++)\r\n      {\r\n        drawBlock(context, grazers[i].x_coord, grazers[i].y_coord,\"blue\");\r\n     }\r\n     for (let i = 0; i < map1.num_predators; i++)\r\n      {\r\n        drawBlock(context, predators[i].x_coord, predators[i].y_coord,\"red\");\r\n     }\r\n      //draw(context), [draw]\r\n    })\r\n    \r\n    return (<canvas ref={canvasRef} {...props}/>)\r\n  \r\n  }\r\n\r\n  export default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}