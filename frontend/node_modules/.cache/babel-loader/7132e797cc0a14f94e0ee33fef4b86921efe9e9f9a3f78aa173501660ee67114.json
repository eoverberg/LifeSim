{"ast":null,"code":"import grazer from'./objects/grazer.js';import obstacle from'./objects/obstacle.js';import predator from'./objects/predator.js';import plant from'./objects/plant.js';import raw from'./assets/LifeSimulation02.xml';class map{constructor(){this.map_height=0.0;this.map_width=0.0;this.initial_plants=0;this.initial_predators=0;this.initial_grazers=0;this.initial_obstacles=0;}get width(){return this.map_width;}set width(num){this.map_width=num;}get height(){return this.map_height;}set height(num){this.map_height=num;}get num_plants(){return this.initial_plants;}set num_plants(num){this.initial_plants=num;}get num_grazers(){return this.initial_grazers;}set num_grazers(num){this.initial_grazers=num;}get num_predators(){return this.initial_predators;}set num_predators(num){this.initial_predators=num;}get num_obstacles(){return this.initial_obstacles;}set num_obstacles(num){this.initial_obstacles=num;}}export const map1=new map();export let plants=[];export let predators=[];export let grazers=[];export let obstacles=[];fetch(raw).then(r=>r.text()).then(text=>{let lines=text.split('\\n');map1.width=parseFloat(lines[3]);map1.height=parseFloat(lines[6]);map1.num_plants=parseInt(lines[11]);for(let i=0;i<map1.num_plants;i+=1){const temp=new plant();temp.x_coord=parseInt(lines[30+11*i]);temp.y_coord=parseInt(lines[33+11*i]);temp.diam=parseFloat(lines[36+11*i]);plants.push(temp);}let grazers_start=29+11*map1.num_plants;let grazers_end=grazers_start+18;map1.num_grazers=parseInt(lines[grazers_start+2]);for(let i=0;i<map1.num_grazers;i+=1){const temp=new grazer();temp.x_coord=parseInt(lines[grazers_end+3+11*i]);temp.y_coord=parseInt(lines[grazers_end+6+11*i]);grazers.push(temp);}let predators_start=grazers_end+2+11*map1.num_grazers;let predators_end=predators_start+30;map1.num_predators=parseInt(lines[predators_start+2]);for(let i=0;i<map1.num_predators;i+=1){const temp=new predator();temp.x_coord=parseInt(lines[predators_end+3+14*i]);temp.y_coord=parseInt(lines[predators_end+6+14*i]);predators.push(temp);}let obstacles_start=predators_end+2+14*map1.num_predators;let obstacles_end=obstacles_start+3;map1.num_obstacles=parseInt(lines[obstacles_start+2]);for(let i=0;i<map1.num_obstacles;i+=1){const temp=new obstacle();temp.x_coord=parseInt(lines[obstacles_end+3+14*i]);temp.y_coord=parseInt(lines[obstacles_end+6+14*i]);temp.diam=parseFloat(lines[obstacles_end+9+14*i]);obstacles.push(temp);}});","map":{"version":3,"names":["grazer","obstacle","predator","plant","raw","map","constructor","map_height","map_width","initial_plants","initial_predators","initial_grazers","initial_obstacles","width","num","height","num_plants","num_grazers","num_predators","num_obstacles","map1","plants","predators","grazers","obstacles","fetch","then","r","text","lines","split","parseFloat","parseInt","i","temp","x_coord","y_coord","diam","push","grazers_start","grazers_end","predators_start","predators_end","obstacles_start","obstacles_end"],"sources":["C:/Users/jed00/Documents/PROTO_REACT_EXPRESS/frontend/src/InitialFile.js"],"sourcesContent":["\r\n\r\n\r\nimport grazer from './objects/grazer.js';\r\nimport obstacle from './objects/obstacle.js';\r\nimport predator from './objects/predator.js';\r\nimport plant from './objects/plant.js';\r\n\r\nimport raw from './assets/LifeSimulation02.xml';\r\n\r\n\r\nclass map \r\n{\r\n      constructor()\r\n      {\r\n            this.map_height = 0.0;\r\n            this.map_width = 0.0;   \r\n            this.initial_plants = 0;   \r\n            this.initial_predators = 0;\r\n            this.initial_grazers = 0;\r\n            this.initial_obstacles = 0;\r\n      }\r\n      get width() { return this.map_width; }\r\n      set width(num) { this.map_width = num; }\r\n      get height() { return this.map_height; }\r\n      set height(num) { this.map_height = num; } \r\n      get num_plants() { return this.initial_plants }\r\n      set num_plants(num) { this.initial_plants = num }\r\n      get num_grazers() { return this.initial_grazers }\r\n      set num_grazers(num) { this.initial_grazers = num }\r\n      get num_predators() { return this.initial_predators }\r\n      set num_predators(num) { this.initial_predators = num }\r\n      get num_obstacles() { return this.initial_obstacles }\r\n      set num_obstacles(num) { this.initial_obstacles = num }\r\n}\r\n\r\nexport const map1 = new map();\r\nexport let plants = [];\r\nexport let predators = [];\r\nexport let grazers = [];\r\nexport let obstacles = [];\r\n\r\nfetch(raw)\r\n.then(r=>r.text())\r\n.then(text=>{\r\n\r\n      let lines =  text.split('\\n');\r\n      map1.width = parseFloat(lines[3]);\r\n      map1.height = parseFloat(lines[6]);\r\n      map1.num_plants = parseInt(lines[11]);\r\n                  \r\n      for (let i = 0; i < (map1.num_plants); i += 1)\r\n      {\r\n            const temp = new plant();\r\n            temp.x_coord = parseInt(lines[30+11*i]);\r\n            temp.y_coord = parseInt(lines[33+11*i]);\r\n            temp.diam = parseFloat(lines[36+11*i]);\r\n            plants.push(temp);\r\n      }\r\n\r\n      let grazers_start = 29 + 11 * map1.num_plants;\r\n      let grazers_end = grazers_start + 18;\r\n      map1.num_grazers = parseInt(lines[grazers_start + 2]);\r\n                  \r\n      for (let i = 0; i < (map1.num_grazers); i += 1)\r\n      {\r\n            const temp = new grazer();\r\n            temp.x_coord = parseInt(lines[grazers_end+3+11*i]);\r\n            temp.y_coord = parseInt(lines[grazers_end+6+11*i]);\r\n            grazers.push(temp);\r\n      }\r\n\r\n      let predators_start = grazers_end + 2 + 11 * map1.num_grazers;\r\n      let predators_end = predators_start + 30;\r\n      map1.num_predators = parseInt(lines[predators_start + 2]);\r\n                  \r\n      for (let i = 0; i < (map1.num_predators); i += 1)\r\n      {\r\n            const temp = new predator();\r\n            temp.x_coord = parseInt(lines[predators_end+3+14*i]);\r\n            temp.y_coord = parseInt(lines[predators_end+6+14*i]);\r\n            predators.push(temp);\r\n      }\r\n\r\n      let obstacles_start = predators_end + 2 + 14 * map1.num_predators;\r\n      let obstacles_end = obstacles_start + 3;\r\n      map1.num_obstacles = parseInt(lines[obstacles_start + 2]);\r\n       \r\n      for (let i = 0; i < (map1.num_obstacles); i += 1)\r\n      {\r\n            const temp = new obstacle();\r\n            temp.x_coord = parseInt(lines[obstacles_end+3+14*i]);\r\n            temp.y_coord = parseInt(lines[obstacles_end+6+14*i]);\r\n            temp.diam = parseFloat(lines[obstacles_end+9+14*i]);\r\n            obstacles.push(temp);\r\n      }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}