{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jed00\\\\Documents\\\\PROTO_REACT_EXPRESS\\\\frontend\\\\src\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport raw from './assets/LifeSimulation01.xml';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Canvas = props => {\n  _s();\n  const canvasRef = useRef(null);\n  class Map {\n    constructor() {\n      this.map_height = 0.0;\n      this.map_width = 0.0;\n      this.initial_plants = 0;\n      this.initial_predators = 0;\n      this.initial_grazers = 0;\n      this.initial_obstacles = 0;\n    }\n    get width() {\n      return this.map_width;\n    }\n    set width(num) {\n      this.map_width = num;\n    }\n    get height() {\n      return this.map_height;\n    }\n    set height(num) {\n      this.map_height = num;\n    }\n    get num_plants() {\n      return this.initial_plants;\n    }\n    set num_plants(num) {\n      this.initial_plants = num;\n    }\n    get num_grazers() {\n      return this.initial_grazers;\n    }\n    set num_grazers(num) {\n      this.initial_grazers = num;\n    }\n    get num_predators() {\n      return this.initial_predators;\n    }\n    set num_predators(num) {\n      this.initial_predators = num;\n    }\n    get num_obstacles() {\n      return this.initial_obstacles;\n    }\n    set num_obstacles(num) {\n      this.initial_obstacles = num;\n    }\n  }\n  class Grazer {\n    constructor() {\n      this.x = 0;\n      this.y = 0;\n    }\n    set x_coord(num) {\n      this.x = num;\n    }\n    get x_coord() {\n      return this.x;\n    }\n    get y_coord() {\n      return this.y;\n    }\n    set y_coord(num) {\n      this.y = num;\n    }\n  }\n  class Obstacle {\n    constructor() {\n      this.x = 0;\n      this.y = 0;\n      this.diameter = 0.0;\n    }\n    set x_coord(num) {\n      this.x = num;\n    }\n    get x_coord() {\n      return this.x;\n    }\n    get y_coord() {\n      return this.y;\n    }\n    set y_coord(num) {\n      this.y = num;\n    }\n    get diam() {\n      return this.diameter;\n    }\n    set diam(num) {\n      this.diameter = num;\n    }\n  }\n  class Plant {\n    constructor() {\n      this.x = 0;\n      this.y = 0;\n      this.diameter = 0.0;\n    }\n    set x_coord(num) {\n      this.x = num;\n    }\n    get x_coord() {\n      return this.x;\n    }\n    get y_coord() {\n      return this.y;\n    }\n    set y_coord(num) {\n      this.y = num;\n    }\n    get diam() {\n      return this.diameter;\n    }\n    set diam(num) {\n      this.diameter = num;\n    }\n  }\n  class Predator {\n    constructor() {\n      this.x = 0;\n      this.y = 0;\n    }\n    set x_coord(num) {\n      this.x = num;\n    }\n    get x_coord() {\n      return this.x;\n    }\n    get y_coord() {\n      return this.y;\n    }\n    set y_coord(num) {\n      this.y = num;\n    }\n  }\n  const map1 = new Map();\n  let plants = [];\n  let predators = [];\n  let grazers = [];\n  let obstacles = [];\n  fetch(raw).then(r => r.text()).then(text => {\n    let lines = text.split('\\n');\n    map1.width = parseFloat(lines[3]);\n    map1.height = parseFloat(lines[6]);\n    map1.num_plants = parseInt(lines[11]);\n    for (let i = 0; i < map1.num_plants; i += 1) {\n      const temp = new Plant();\n      temp.x_coord = parseInt(lines[30 + 11 * i]);\n      temp.y_coord = parseInt(lines[33 + 11 * i]);\n      temp.diam = parseFloat(lines[36 + 11 * i]);\n      plants.push(temp);\n    }\n    let grazers_start = 29 + 11 * map1.num_plants;\n    let grazers_end = grazers_start + 18;\n    map1.num_grazers = parseInt(lines[grazers_start + 2]);\n    for (let i = 0; i < map1.num_grazers; i += 1) {\n      const temp = new Grazer();\n      temp.x_coord = parseInt(lines[grazers_end + 3 + 11 * i]);\n      temp.y_coord = parseInt(lines[grazers_end + 6 + 11 * i]);\n      grazers.push(temp);\n    }\n    let predators_start = grazers_end + 2 + 11 * map1.num_grazers;\n    let predators_end = predators_start + 30;\n    map1.num_predators = parseInt(lines[predators_start + 2]);\n    for (let i = 0; i < map1.num_predators; i += 1) {\n      const temp = new Predator();\n      temp.x_coord = parseInt(lines[predators_end + 3 + 14 * i]);\n      temp.y_coord = parseInt(lines[predators_end + 6 + 14 * i]);\n      predators.push(temp);\n    }\n    let obstacles_start = predators_end + 2 + 14 * map1.num_predators;\n    let obstacles_end = obstacles_start + 3;\n    map1.num_obstacles = parseInt(lines[obstacles_start + 2]);\n    for (let i = 0; i < map1.num_obstacles; i += 1) {\n      const temp = new Obstacle();\n      temp.x_coord = parseInt(lines[obstacles_end + 3 + 14 * i]);\n      temp.y_coord = parseInt(lines[obstacles_end + 6 + 14 * i]);\n      temp.diam = parseFloat(lines[obstacles_end + 9 + 14 * i]);\n      obstacles.push(temp);\n    }\n  });\n  function drawLine(ctx, x1, y1, x2, y2, bColor) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineWidth = .5;\n    ctx.strokeStyle = bColor;\n    ctx.fillStyle = bColor;\n    ctx.fill();\n    ctx.stroke();\n  }\n  ;\n  //draws a big line that looks like a square\n\n  function drawBlock(ctx, x1, y1, bColor) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1 + 5);\n    ctx.lineTo(x1 + 10, y1 + 5);\n    ctx.lineWidth = 10;\n    ctx.strokeStyle = bColor;\n    ctx.stroke();\n  }\n  ;\n  function drawCircle(ctx, x1, y1, d1, bColor) {\n    ctx.beginPath();\n    ctx.arc(x1 + 5, y1 + 5, d1 / 2, 0, 2 * Math.PI);\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = bColor;\n    ctx.fillStyle = bColor;\n    ctx.fill();\n    ctx.stroke();\n  }\n  ;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.canvas.width = map1.width;\n    context.canvas.height = map1.height;\n    context.canvas.style = \"border:1px solid #000000;\";\n\n    //Our draw come here\n    for (let i = 25; i < context.canvas.width; i += 25) {\n      drawLine(context, i, 0, i, context.canvas.height, \"black\");\n    }\n    for (let i = 25; i < context.canvas.height; i += 25) {\n      drawLine(context, 0, i, context.canvas.width, i, \"#000000\");\n    }\n    for (let i = 0; i < map1.num_plants; i++) {\n      drawCircle(context, plants[i].x_coord, plants[i].y_coord, plants[i].diam, \"green\");\n    }\n    for (let i = 0; i < map1.num_obstacles; i++) {\n      drawCircle(context, obstacles[i].x_coord, obstacles[i].y_coord, obstacles[i].diam, \"grey\");\n    }\n    for (let i = 0; i < map1.num_grazers; i++) {\n      drawBlock(context, grazers[i].x_coord, grazers[i].y_coord, \"blue\");\n    }\n    for (let i = 0; i < map1.num_predators; i++) {\n      drawBlock(context, predators[i].x_coord, predators[i].y_coord, \"red\");\n    }\n  }, [grazers, predators, plants, obstacles, map1, drawBlock, drawLine, drawCircle]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Test map width = \", map1.map_width]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","raw","jsxDEV","_jsxDEV","Fragment","_Fragment","Canvas","props","_s","canvasRef","Map","constructor","map_height","map_width","initial_plants","initial_predators","initial_grazers","initial_obstacles","width","num","height","num_plants","num_grazers","num_predators","num_obstacles","Grazer","x","y","x_coord","y_coord","Obstacle","diameter","diam","Plant","Predator","map1","plants","predators","grazers","obstacles","fetch","then","r","text","lines","split","parseFloat","parseInt","i","temp","push","grazers_start","grazers_end","predators_start","predators_end","obstacles_start","obstacles_end","drawLine","ctx","x1","y1","x2","y2","bColor","beginPath","moveTo","lineTo","lineWidth","strokeStyle","fillStyle","fill","stroke","drawBlock","drawCircle","d1","arc","Math","PI","canvas","current","context","getContext","style","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/jed00/Documents/PROTO_REACT_EXPRESS/frontend/src/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport raw from './assets/LifeSimulation01.xml';\r\nconst Canvas = props => {\r\n    const canvasRef = useRef(null)    \r\nclass Map \r\n{\r\n      constructor()\r\n      {\r\n            this.map_height = 0.0;\r\n            this.map_width = 0.0;   \r\n            this.initial_plants = 0;   \r\n            this.initial_predators = 0;\r\n            this.initial_grazers = 0;\r\n            this.initial_obstacles = 0;\r\n      }\r\n      get width() { return this.map_width; }\r\n      set width(num) { this.map_width = num; }\r\n      get height() { return this.map_height; }\r\n      set height(num) { this.map_height = num; } \r\n      get num_plants() { return this.initial_plants }\r\n      set num_plants(num) { this.initial_plants = num }\r\n      get num_grazers() { return this.initial_grazers }\r\n      set num_grazers(num) { this.initial_grazers = num }\r\n      get num_predators() { return this.initial_predators }\r\n      set num_predators(num) { this.initial_predators = num }\r\n      get num_obstacles() { return this.initial_obstacles }\r\n      set num_obstacles(num) { this.initial_obstacles = num }\r\n}\r\n\r\nclass Grazer\r\n{\r\n      constructor()\r\n      {\r\n            this.x = 0;\r\n            this.y = 0;\r\n      }\r\n      set x_coord(num) { this.x = num; }\r\n      get x_coord() { return this.x; }\r\n      get y_coord() { return this.y; }\r\n      set y_coord(num) { this.y = num; }\r\n}\r\n\r\nclass Obstacle\r\n{\r\n      constructor()\r\n      {\r\n            this.x = 0;\r\n            this.y = 0;\r\n            this.diameter = 0.0;\r\n      }\r\n      set x_coord(num) { this.x = num; }\r\n      get x_coord() { return this.x; }\r\n      get y_coord() { return this.y; }\r\n      set y_coord(num) { this.y = num; }\r\n      get diam() { return this.diameter; }\r\n      set diam(num) { this.diameter = num; }\r\n}\r\n\r\nclass Plant\r\n{\r\n      constructor()\r\n      {\r\n            this.x = 0;\r\n            this.y = 0;\r\n            this.diameter = 0.0;\r\n      }\r\n      set x_coord(num) { this.x = num; }\r\n      get x_coord() { return this.x; }\r\n      get y_coord() { return this.y; }\r\n      set y_coord(num) { this.y = num; }\r\n      get diam() { return this.diameter; }\r\n      set diam(num) { this.diameter = num; }\r\n}\r\n\r\nclass Predator\r\n{\r\n      constructor()\r\n      {\r\n            this.x = 0;\r\n            this.y = 0;\r\n      }\r\n      set x_coord(num) { this.x = num; }\r\n      get x_coord() { return this.x; }\r\n      get y_coord() { return this.y; }\r\n      set y_coord(num) { this.y = num; }\r\n}\r\n\r\nconst map1 = new Map();\r\n let plants = [];\r\n let predators = [];\r\n let grazers = [];\r\n let obstacles = [];\r\n\r\nfetch(raw)\r\n.then(r=>r.text())\r\n.then(text=>{\r\n      let lines =  text.split('\\n');\r\n      map1.width = parseFloat(lines[3]);\r\n      map1.height = parseFloat(lines[6]);\r\n      map1.num_plants = parseInt(lines[11]);\r\n\r\n      for (let i = 0; i < (map1.num_plants); i += 1)\r\n      {\r\n            const temp = new Plant();\r\n            temp.x_coord = parseInt(lines[30+11*i]);\r\n            temp.y_coord = parseInt(lines[33+11*i]);\r\n            temp.diam = parseFloat(lines[36+11*i]);\r\n            plants.push(temp);\r\n      }\r\n\r\n      let grazers_start = 29 + 11 * map1.num_plants;\r\n      let grazers_end = grazers_start + 18;\r\n      map1.num_grazers = parseInt(lines[grazers_start + 2]);\r\n                  \r\n      for (let i = 0; i < (map1.num_grazers); i += 1)\r\n      {\r\n            const temp = new Grazer();\r\n            temp.x_coord = parseInt(lines[grazers_end+3+11*i]);\r\n            temp.y_coord = parseInt(lines[grazers_end+6+11*i]);\r\n            grazers.push(temp);\r\n      }\r\n\r\n      let predators_start = grazers_end + 2 + 11 * map1.num_grazers;\r\n      let predators_end = predators_start + 30;\r\n      map1.num_predators = parseInt(lines[predators_start + 2]);\r\n                  \r\n      for (let i = 0; i < (map1.num_predators); i += 1)\r\n      {\r\n            const temp = new Predator();\r\n            temp.x_coord = parseInt(lines[predators_end+3+14*i]);\r\n            temp.y_coord = parseInt(lines[predators_end+6+14*i]);\r\n            predators.push(temp);\r\n      }\r\n\r\n      let obstacles_start = predators_end + 2 + 14 * map1.num_predators;\r\n      let obstacles_end = obstacles_start + 3;\r\n      map1.num_obstacles = parseInt(lines[obstacles_start + 2]);\r\n       \r\n      for (let i = 0; i < (map1.num_obstacles); i += 1)\r\n      {\r\n            const temp = new Obstacle();\r\n            temp.x_coord = parseInt(lines[obstacles_end+3+14*i]);\r\n            temp.y_coord = parseInt(lines[obstacles_end+6+14*i]);\r\n            temp.diam = parseFloat(lines[obstacles_end+9+14*i]);\r\n            obstacles.push(temp);\r\n      }\r\n});\r\n\r\nfunction drawLine(ctx, x1, y1, x2, y2, bColor)\r\n{\r\n  ctx.beginPath();\r\n  ctx.moveTo(x1, y1);\r\n  ctx.lineTo(x2, y2);\r\n  ctx.lineWidth = .5;\r\n  ctx.strokeStyle = bColor;\r\n  ctx.fillStyle = bColor;\r\n  ctx.fill();\r\n  ctx.stroke();\r\n};\r\n    //draws a big line that looks like a square\r\n\r\n\r\nfunction drawBlock(ctx, x1, y1, bColor)\r\n{\r\n  ctx.beginPath();\r\n  ctx.moveTo(x1, y1+5);\r\n  ctx.lineTo(x1+10, y1+5);\r\n  ctx.lineWidth = 10;\r\n  ctx.strokeStyle = bColor;\r\n  ctx.stroke();\r\n};\r\n\r\nfunction drawCircle(ctx, x1, y1, d1, bColor)\r\n{\r\n  ctx.beginPath();\r\n  ctx.arc(x1+5, y1+5, d1/2, 0, 2*Math.PI);\r\n  ctx.lineWidth = 1;\r\n  ctx.strokeStyle = bColor;\r\n  ctx.fillStyle = bColor;\r\n  ctx.fill();\r\n  ctx.stroke();\r\n};\r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current;\r\n      const context = canvas.getContext('2d');\r\n      context.canvas.width = map1.width;\r\n      context.canvas.height = map1.height;\r\n      context.canvas.style = \"border:1px solid #000000;\";\r\n\r\n      //Our draw come here\r\n       for(let i = 25; i < context.canvas.width; i+=25)\r\n      {\r\n        drawLine(context, i, 0, i, context.canvas.height, \"black\");\r\n      }\r\n      for(let i = 25; i < context.canvas.height; i+=25)\r\n      {\r\n        drawLine(context, 0, i, context.canvas.width, i, \"#000000\");\r\n      }\r\n      for (let i = 0; i < map1.num_plants; i++)\r\n      {\r\n        drawCircle(context, plants[i].x_coord, plants[i].y_coord, plants[i].diam,\"green\");\r\n      }\r\n      for (let i = 0; i < map1.num_obstacles; i++)\r\n      {\r\n        drawCircle(context, obstacles[i].x_coord, obstacles[i].y_coord, obstacles[i].diam,\"grey\");\r\n      }\r\n      for (let i = 0; i < map1.num_grazers; i++)\r\n      {\r\n        drawBlock(context, grazers[i].x_coord, grazers[i].y_coord,\"blue\");\r\n     }\r\n     for (let i = 0; i < map1.num_predators; i++)\r\n      {\r\n        drawBlock(context, predators[i].x_coord, predators[i].y_coord,\"red\");\r\n     }\r\n    }, [grazers, predators, plants, obstacles, map1, drawBlock, drawLine, drawCircle]);\r\n    \r\n    return (<>\r\n    <p>Test map width = {map1.map_width}</p>\r\n    <canvas ref={canvasRef} {...props}/>\r\n    </>);\r\n  \r\n\r\n  };\r\n  \r\n\r\n  export default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}