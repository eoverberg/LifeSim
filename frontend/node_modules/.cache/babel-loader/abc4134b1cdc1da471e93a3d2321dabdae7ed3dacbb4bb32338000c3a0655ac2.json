{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jed00\\\\Documents\\\\PROTO_REACT_EXPRESS\\\\frontend\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App.js';\n//import Canvas from './Canvas.js';\n\nimport reportWebVitals from './reportWebVitals';\nimport raw from './assets/LifeSimulation01.xml';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Map {\n  constructor() {\n    this.map_height = 0.0;\n    this.map_width = 0.0;\n    this.initial_plants = 0;\n    this.initial_predators = 0;\n    this.initial_grazers = 0;\n    this.initial_obstacles = 0;\n  }\n  get width() {\n    return this.map_width;\n  }\n  set width(num) {\n    this.map_width = num;\n  }\n  get height() {\n    return this.map_height;\n  }\n  set height(num) {\n    this.map_height = num;\n  }\n  get num_plants() {\n    return this.initial_plants;\n  }\n  set num_plants(num) {\n    this.initial_plants = num;\n  }\n  get num_grazers() {\n    return this.initial_grazers;\n  }\n  set num_grazers(num) {\n    this.initial_grazers = num;\n  }\n  get num_predators() {\n    return this.initial_predators;\n  }\n  set num_predators(num) {\n    this.initial_predators = num;\n  }\n  get num_obstacles() {\n    return this.initial_obstacles;\n  }\n  set num_obstacles(num) {\n    this.initial_obstacles = num;\n  }\n}\nclass Grazer {\n  constructor() {\n    this.x = 0;\n    this.y = 0;\n  }\n  set x_coord(num) {\n    this.x = num;\n  }\n  get x_coord() {\n    return this.x;\n  }\n  get y_coord() {\n    return this.y;\n  }\n  set y_coord(num) {\n    this.y = num;\n  }\n}\nclass Obstacle {\n  constructor() {\n    this.x = 0;\n    this.y = 0;\n    this.diameter = 0.0;\n  }\n  set x_coord(num) {\n    this.x = num;\n  }\n  get x_coord() {\n    return this.x;\n  }\n  get y_coord() {\n    return this.y;\n  }\n  set y_coord(num) {\n    this.y = num;\n  }\n  get diam() {\n    return this.diameter;\n  }\n  set diam(num) {\n    this.diameter = num;\n  }\n}\nclass Plant {\n  constructor() {\n    this.x = 0;\n    this.y = 0;\n    this.diameter = 0.0;\n  }\n  set x_coord(num) {\n    this.x = num;\n  }\n  get x_coord() {\n    return this.x;\n  }\n  get y_coord() {\n    return this.y;\n  }\n  set y_coord(num) {\n    this.y = num;\n  }\n  get diam() {\n    return this.diameter;\n  }\n  set diam(num) {\n    this.diameter = num;\n  }\n}\nclass Predator {\n  constructor() {\n    this.x = 0;\n    this.y = 0;\n  }\n  set x_coord(num) {\n    this.x = num;\n  }\n  get x_coord() {\n    return this.x;\n  }\n  get y_coord() {\n    return this.y;\n  }\n  set y_coord(num) {\n    this.y = num;\n  }\n}\nconst map1 = new Map();\nlet plants = [];\nlet predators = [];\nlet grazers = [];\nlet obstacles = [];\nfetch(raw).then(r => r.text()).then(text => {\n  let lines = text.split('\\n');\n  map1.width = parseFloat(lines[3]);\n  map1.height = parseFloat(lines[6]);\n  map1.num_plants = parseInt(lines[11]);\n  for (let i = 0; i < map1.num_plants; i += 1) {\n    const temp = new Plant();\n    temp.x_coord = parseInt(lines[30 + 11 * i]);\n    temp.y_coord = parseInt(lines[33 + 11 * i]);\n    temp.diam = parseFloat(lines[36 + 11 * i]);\n    plants.push(temp);\n  }\n  let grazers_start = 29 + 11 * map1.num_plants;\n  let grazers_end = grazers_start + 18;\n  map1.num_grazers = parseInt(lines[grazers_start + 2]);\n  for (let i = 0; i < map1.num_grazers; i += 1) {\n    const temp = new Grazer();\n    temp.x_coord = parseInt(lines[grazers_end + 3 + 11 * i]);\n    temp.y_coord = parseInt(lines[grazers_end + 6 + 11 * i]);\n    grazers.push(temp);\n  }\n  let predators_start = grazers_end + 2 + 11 * map1.num_grazers;\n  let predators_end = predators_start + 30;\n  map1.num_predators = parseInt(lines[predators_start + 2]);\n  for (let i = 0; i < map1.num_predators; i += 1) {\n    const temp = new Predator();\n    temp.x_coord = parseInt(lines[predators_end + 3 + 14 * i]);\n    temp.y_coord = parseInt(lines[predators_end + 6 + 14 * i]);\n    predators.push(temp);\n  }\n  let obstacles_start = predators_end + 2 + 14 * map1.num_predators;\n  let obstacles_end = obstacles_start + 3;\n  map1.num_obstacles = parseInt(lines[obstacles_start + 2]);\n  for (let i = 0; i < map1.num_obstacles; i += 1) {\n    const temp = new Obstacle();\n    temp.x_coord = parseInt(lines[obstacles_end + 3 + 14 * i]);\n    temp.y_coord = parseInt(lines[obstacles_end + 6 + 14 * i]);\n    temp.diam = parseFloat(lines[obstacles_end + 9 + 14 * i]);\n    obstacles.push(temp);\n  }\n});\nfunction drawLine(ctx, x1, y1, x2, y2, bColor) {\n  ctx.beginPath();\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineWidth = .5;\n  ctx.strokeStyle = bColor;\n  ctx.fillStyle = bColor;\n  ctx.fill();\n  ctx.stroke();\n}\n;\n//draws a big line that looks like a square\n\nfunction drawBlock(ctx, x1, y1, bColor) {\n  ctx.beginPath();\n  ctx.moveTo(x1, y1 + 5);\n  ctx.lineTo(x1 + 10, y1 + 5);\n  ctx.lineWidth = 10;\n  ctx.strokeStyle = bColor;\n  ctx.stroke();\n}\n;\nfunction drawCircle(ctx, x1, y1, d1, bColor) {\n  ctx.beginPath();\n  ctx.arc(x1 + 5, y1 + 5, d1 / 2, 0, 2 * Math.PI);\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = bColor;\n  ctx.fillStyle = bColor;\n  ctx.fill();\n  ctx.stroke();\n}\n;\nconst Canvas = props => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.canvas.width = map1.width;\n    context.canvas.height = map1.height;\n    context.canvas.style = \"border:1px solid #000000;\";\n\n    //Our draw come here\n    for (let i = 25; i < context.canvas.width; i += 25) {\n      drawLine(context, i, 0, i, context.canvas.height, \"black\");\n    }\n    for (let i = 25; i < context.canvas.height; i += 25) {\n      drawLine(context, 0, i, context.canvas.width, i, \"#000000\");\n    }\n    for (let i = 0; i < map1.num_plants; i++) {\n      drawCircle(context, plants[i].x_coord, plants[i].y_coord, plants[i].diam, \"green\");\n    }\n    for (let i = 0; i < map1.num_obstacles; i++) {\n      drawCircle(context, obstacles[i].x_coord, obstacles[i].y_coord, obstacles[i].diam, \"grey\");\n    }\n    for (let i = 0; i < map1.num_grazers; i++) {\n      drawBlock(context, grazers[i].x_coord, grazers[i].y_coord, \"blue\");\n    }\n    for (let i = 0; i < map1.num_predators; i++) {\n      drawBlock(context, predators[i].x_coord, predators[i].y_coord, \"red\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Test map width = \", map1.map_width]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Canvas;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(Canvas, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 239,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function np={map1.num_plants}\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","ReactDOM","App","reportWebVitals","raw","jsxDEV","_jsxDEV","Fragment","_Fragment","Map","constructor","map_height","map_width","initial_plants","initial_predators","initial_grazers","initial_obstacles","width","num","height","num_plants","num_grazers","num_predators","num_obstacles","Grazer","x","y","x_coord","y_coord","Obstacle","diameter","diam","Plant","Predator","map1","plants","predators","grazers","obstacles","fetch","then","r","text","lines","split","parseFloat","parseInt","i","temp","push","grazers_start","grazers_end","predators_start","predators_end","obstacles_start","obstacles_end","drawLine","ctx","x1","y1","x2","y2","bColor","beginPath","moveTo","lineTo","lineWidth","strokeStyle","fillStyle","fill","stroke","drawBlock","drawCircle","d1","arc","Math","PI","Canvas","props","_s","canvasRef","canvas","current","context","getContext","style","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","root","createRoot","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["C:/Users/jed00/Documents/PROTO_REACT_EXPRESS/frontend/src/index.js"],"sourcesContent":["import React, { useRef, useEffect }  from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App.js';\n//import Canvas from './Canvas.js';\n\nimport reportWebVitals from './reportWebVitals';\nimport raw from './assets/LifeSimulation01.xml';\n\nclass Map \n{\n      constructor()\n      {\n            this.map_height = 0.0;\n            this.map_width = 0.0;   \n            this.initial_plants = 0;   \n            this.initial_predators = 0;\n            this.initial_grazers = 0;\n            this.initial_obstacles = 0;\n      }\n      get width() { return this.map_width; }\n      set width(num) { this.map_width = num; }\n      get height() { return this.map_height; }\n      set height(num) { this.map_height = num; } \n      get num_plants() { return this.initial_plants }\n      set num_plants(num) { this.initial_plants = num }\n      get num_grazers() { return this.initial_grazers }\n      set num_grazers(num) { this.initial_grazers = num }\n      get num_predators() { return this.initial_predators }\n      set num_predators(num) { this.initial_predators = num }\n      get num_obstacles() { return this.initial_obstacles }\n      set num_obstacles(num) { this.initial_obstacles = num }\n}\n\nclass Grazer\n{\n      constructor()\n      {\n            this.x = 0;\n            this.y = 0;\n      }\n      set x_coord(num) { this.x = num; }\n      get x_coord() { return this.x; }\n      get y_coord() { return this.y; }\n      set y_coord(num) { this.y = num; }\n}\n\nclass Obstacle\n{\n      constructor()\n      {\n            this.x = 0;\n            this.y = 0;\n            this.diameter = 0.0;\n      }\n      set x_coord(num) { this.x = num; }\n      get x_coord() { return this.x; }\n      get y_coord() { return this.y; }\n      set y_coord(num) { this.y = num; }\n      get diam() { return this.diameter; }\n      set diam(num) { this.diameter = num; }\n}\n\nclass Plant\n{\n      constructor()\n      {\n            this.x = 0;\n            this.y = 0;\n            this.diameter = 0.0;\n      }\n      set x_coord(num) { this.x = num; }\n      get x_coord() { return this.x; }\n      get y_coord() { return this.y; }\n      set y_coord(num) { this.y = num; }\n      get diam() { return this.diameter; }\n      set diam(num) { this.diameter = num; }\n}\n\nclass Predator\n{\n      constructor()\n      {\n            this.x = 0;\n            this.y = 0;\n      }\n      set x_coord(num) { this.x = num; }\n      get x_coord() { return this.x; }\n      get y_coord() { return this.y; }\n      set y_coord(num) { this.y = num; }\n}\n\nconst map1 = new Map();\n let plants = [];\n let predators = [];\n let grazers = [];\n let obstacles = [];\n\nfetch(raw)\n.then(r=>r.text())\n.then(text=>{\n      let lines =  text.split('\\n');\n      map1.width = parseFloat(lines[3]);\n      map1.height = parseFloat(lines[6]);\n      map1.num_plants = parseInt(lines[11]);\n\n      for (let i = 0; i < (map1.num_plants); i += 1)\n      {\n            const temp = new Plant();\n            temp.x_coord = parseInt(lines[30+11*i]);\n            temp.y_coord = parseInt(lines[33+11*i]);\n            temp.diam = parseFloat(lines[36+11*i]);\n            plants.push(temp);\n      }\n\n      let grazers_start = 29 + 11 * map1.num_plants;\n      let grazers_end = grazers_start + 18;\n      map1.num_grazers = parseInt(lines[grazers_start + 2]);\n                  \n      for (let i = 0; i < (map1.num_grazers); i += 1)\n      {\n            const temp = new Grazer();\n            temp.x_coord = parseInt(lines[grazers_end+3+11*i]);\n            temp.y_coord = parseInt(lines[grazers_end+6+11*i]);\n            grazers.push(temp);\n      }\n\n      let predators_start = grazers_end + 2 + 11 * map1.num_grazers;\n      let predators_end = predators_start + 30;\n      map1.num_predators = parseInt(lines[predators_start + 2]);\n                  \n      for (let i = 0; i < (map1.num_predators); i += 1)\n      {\n            const temp = new Predator();\n            temp.x_coord = parseInt(lines[predators_end+3+14*i]);\n            temp.y_coord = parseInt(lines[predators_end+6+14*i]);\n            predators.push(temp);\n      }\n\n      let obstacles_start = predators_end + 2 + 14 * map1.num_predators;\n      let obstacles_end = obstacles_start + 3;\n      map1.num_obstacles = parseInt(lines[obstacles_start + 2]);\n       \n      for (let i = 0; i < (map1.num_obstacles); i += 1)\n      {\n            const temp = new Obstacle();\n            temp.x_coord = parseInt(lines[obstacles_end+3+14*i]);\n            temp.y_coord = parseInt(lines[obstacles_end+6+14*i]);\n            temp.diam = parseFloat(lines[obstacles_end+9+14*i]);\n            obstacles.push(temp);\n      }\n});\n\nfunction drawLine(ctx, x1, y1, x2, y2, bColor)\n{\n  ctx.beginPath();\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineWidth = .5;\n  ctx.strokeStyle = bColor;\n  ctx.fillStyle = bColor;\n  ctx.fill();\n  ctx.stroke();\n};\n    //draws a big line that looks like a square\n\n\nfunction drawBlock(ctx, x1, y1, bColor)\n{\n  ctx.beginPath();\n  ctx.moveTo(x1, y1+5);\n  ctx.lineTo(x1+10, y1+5);\n  ctx.lineWidth = 10;\n  ctx.strokeStyle = bColor;\n  ctx.stroke();\n};\n\nfunction drawCircle(ctx, x1, y1, d1, bColor)\n{\n  ctx.beginPath();\n  ctx.arc(x1+5, y1+5, d1/2, 0, 2*Math.PI);\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = bColor;\n  ctx.fillStyle = bColor;\n  ctx.fill();\n  ctx.stroke();\n};\n\n\nconst Canvas = props => {\n    const canvasRef = useRef(null)    \n\n\n\n    useEffect(() => {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      context.canvas.width = map1.width;\n      context.canvas.height = map1.height;\n      context.canvas.style = \"border:1px solid #000000;\";\n\n      //Our draw come here\n       for(let i = 25; i < context.canvas.width; i+=25)\n      {\n        drawLine(context, i, 0, i, context.canvas.height, \"black\");\n      }\n      for(let i = 25; i < context.canvas.height; i+=25)\n      {\n        drawLine(context, 0, i, context.canvas.width, i, \"#000000\");\n      }\n      for (let i = 0; i < map1.num_plants; i++)\n      {\n        drawCircle(context, plants[i].x_coord, plants[i].y_coord, plants[i].diam,\"green\");\n      }\n      for (let i = 0; i < map1.num_obstacles; i++)\n      {\n        drawCircle(context, obstacles[i].x_coord, obstacles[i].y_coord, obstacles[i].diam,\"grey\");\n      }\n      for (let i = 0; i < map1.num_grazers; i++)\n      {\n        drawBlock(context, grazers[i].x_coord, grazers[i].y_coord,\"blue\");\n     }\n     for (let i = 0; i < map1.num_predators; i++)\n      {\n        drawBlock(context, predators[i].x_coord, predators[i].y_coord,\"red\");\n     }\n    }, []);\n    \n    return (<>\n    <p>Test map width = {map1.map_width}</p>\n    <canvas ref={canvasRef} {...props}/>\n    </>);\n  \n  };\n  \nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  \n  <React.StrictMode>\n    <Canvas />\n    <App />\n    \n  </React.StrictMode>\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function np={map1.num_plants}\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}