{"ast":null,"code":"import raw from './assets/LifeSimulation01.xml';\nclass map {\n  constructor() {\n    this.plant = {\n      x: 0,\n      y: 0\n    };\n    this.map_height = 0;\n    this.map_width = 0;\n    this.plants = [];\n  }\n  get width() {\n    return this.map_width;\n  }\n  set width(num) {\n    this.map_width = num;\n  }\n  get height() {\n    return this.map_height;\n  }\n  set height(num) {\n    this.map_height = num;\n  }\n  //get plants() { return this.plants }\n  append_plants(x_coord, y_coord) {\n    let temp = this.plant;\n    temp.x = x_coord;\n    temp.y = y_coord;\n    this.plants.push(temp);\n  }\n  get_a_plant() {\n    let temp = this.plant;\n    temp = this.plants[0];\n    if (temp == null) return 0, 0;else return [temp.x, temp.y];\n  }\n}\nconst map1 = new map();\nfetch(raw).then(r => r.text()).then(text => {\n  let lines = text.split('\\n');\n  map1.width = parseInt(lines[3]);\n  map1.height = parseInt(lines[6]);\n  map1.append_plants(parseInt(lines[30]), parseInt(lines[33]));\n});\nexport default map1;","map":{"version":3,"names":["raw","map","constructor","plant","x","y","map_height","map_width","plants","width","num","height","append_plants","x_coord","y_coord","temp","push","get_a_plant","map1","fetch","then","r","text","lines","split","parseInt"],"sources":["C:/Users/jed00/Documents/PROTO_REACT_EXPRESS/frontend/src/InitialFile.js"],"sourcesContent":["import raw from './assets/LifeSimulation01.xml';\r\n\r\nclass map\r\n{\r\n\r\n      \r\n\r\n      constructor()\r\n      {\r\n            this.map_height = 0;\r\n            this.map_width = 0;\r\n            this.plants = [];      \r\n      }\r\n      plant = {\r\n          x: 0,\r\n          y: 0,\r\n      }\r\n      get width() { return this.map_width }\r\n      set width(num) { this.map_width = num }\r\n      get height() { return this.map_height }\r\n      set height(num) { this.map_height = num } \r\n      //get plants() { return this.plants }\r\n      append_plants(x_coord, y_coord) {\r\n            let temp = this.plant;\r\n            temp.x = x_coord;\r\n            temp.y = y_coord;\r\n            this.plants.push(temp)}\r\n      get_a_plant() {\r\n            let temp = this.plant; \r\n            temp = this.plants[0];\r\n            if (temp == null)\r\n                  return(0,0);\r\n            else \r\n                  return [temp.x, temp.y]; \r\n      };\r\n}\r\n\r\nconst map1 = new map();\r\n\r\nfetch(raw)\r\n            .then(r=>r.text())\r\n            .then(text=>{\r\n                  let lines =  text.split('\\n');\r\n                  map1.width = parseInt(lines[3]);\r\n                  map1.height = parseInt(lines[6]);\r\n                  map1.append_plants(parseInt(lines[30]), parseInt(lines[33]));\r\n            })\r\n\r\nexport default map1;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,+BAA+B;AAE/C,MAAMC,GAAG,CACT;EAIMC,WAAWA,CAAA,EACX;IAAA,KAKAC,KAAK,GAAG;MACJC,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE;IACP,CAAC;IAPK,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,MAAM,GAAG,EAAE;EACtB;EAKA,IAAIC,KAAKA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACF,SAAS;EAAC;EACpC,IAAIE,KAAKA,CAACC,GAAG,EAAE;IAAE,IAAI,CAACH,SAAS,GAAGG,GAAG;EAAC;EACtC,IAAIC,MAAMA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACL,UAAU;EAAC;EACtC,IAAIK,MAAMA,CAACD,GAAG,EAAE;IAAE,IAAI,CAACJ,UAAU,GAAGI,GAAG;EAAC;EACxC;EACAE,aAAaA,CAACC,OAAO,EAAEC,OAAO,EAAE;IAC1B,IAAIC,IAAI,GAAG,IAAI,CAACZ,KAAK;IACrBY,IAAI,CAACX,CAAC,GAAGS,OAAO;IAChBE,IAAI,CAACV,CAAC,GAAGS,OAAO;IAChB,IAAI,CAACN,MAAM,CAACQ,IAAI,CAACD,IAAI,CAAC;EAAA;EAC5BE,WAAWA,CAAA,EAAG;IACR,IAAIF,IAAI,GAAG,IAAI,CAACZ,KAAK;IACrBY,IAAI,GAAG,IAAI,CAACP,MAAM,CAAC,CAAC,CAAC;IACrB,IAAIO,IAAI,IAAI,IAAI,EACV,OAAO,CAAC,EAAC,CAAC,CAAE,KAEZ,OAAO,CAACA,IAAI,CAACX,CAAC,EAAEW,IAAI,CAACV,CAAC,CAAC;EACnC;AACN;AAEA,MAAMa,IAAI,GAAG,IAAIjB,GAAG,CAAC,CAAC;AAEtBkB,KAAK,CAACnB,GAAG,CAAC,CACGoB,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACjBF,IAAI,CAACE,IAAI,IAAE;EACN,IAAIC,KAAK,GAAID,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;EAC7BN,IAAI,CAACT,KAAK,GAAGgB,QAAQ,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/BL,IAAI,CAACP,MAAM,GAAGc,QAAQ,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;EAChCL,IAAI,CAACN,aAAa,CAACa,QAAQ,CAACF,KAAK,CAAC,EAAE,CAAC,CAAC,EAAEE,QAAQ,CAACF,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC;AAEd,eAAeL,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}