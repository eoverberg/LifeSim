{"ast":null,"code":"import raw from './assets/LifeSimulation01.xml';\nclass map {\n  constructor() {\n    this.map_height = 0;\n    this.map_width = 0;\n    this.plants = [];\n  }\n  plant(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  get width() {\n    return this.map_width;\n  }\n  set width(num) {\n    this.map_width = num;\n  }\n  get height() {\n    return this.map_height;\n  }\n  set height(num) {\n    this.map_height = num;\n  }\n  //get plants() { return this.plants }\n  append_plants(x, y) {\n    this.plants.push(new this.plant(x, y));\n  }\n}\nconst map1 = new map();\nfetch(raw).then(r => r.text()).then(text => {\n  let lines = text.split('\\n');\n  map1.width = parseInt(lines[3]);\n  map1.height = parseInt(lines[6]);\n  map1.append_plants(parseInt(lines[30]), parseInt(lines[33]));\n});\nexport default map1;","map":{"version":3,"names":["raw","map","constructor","map_height","map_width","plants","plant","x","y","width","num","height","append_plants","push","map1","fetch","then","r","text","lines","split","parseInt"],"sources":["C:/Users/jed00/Documents/PROTO_REACT_EXPRESS/frontend/src/InitialFile.js"],"sourcesContent":["import raw from './assets/LifeSimulation01.xml';\r\n\r\nclass map\r\n{\r\n\r\n      \r\n\r\n      constructor()\r\n      {\r\n            this.map_height = 0;\r\n            this.map_width = 0;\r\n            this.plants = [];      \r\n      }\r\n      plant(x,y) {\r\n          this.x = x;\r\n          this.y = y;\r\n      }\r\n      get width() { return this.map_width }\r\n      set width(num) { this.map_width = num }\r\n      get height() { return this.map_height }\r\n      set height(num) { this.map_height = num } \r\n      //get plants() { return this.plants }\r\n      append_plants(x, y) {this.plants.push(new this.plant(x,y))}\r\n}\r\n\r\nconst map1 = new map();\r\n\r\nfetch(raw)\r\n            .then(r=>r.text())\r\n            .then(text=>{\r\n                  let lines =  text.split('\\n');\r\n                  map1.width = parseInt(lines[3]);\r\n                  map1.height = parseInt(lines[6]);\r\n                  map1.append_plants(parseInt(lines[30]), parseInt(lines[33]));\r\n            })\r\n\r\nexport default map1;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,+BAA+B;AAE/C,MAAMC,GAAG,CACT;EAIMC,WAAWA,CAAA,EACX;IACM,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,MAAM,GAAG,EAAE;EACtB;EACAC,KAAKA,CAACC,CAAC,EAACC,CAAC,EAAE;IACP,IAAI,CAACD,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;EACd;EACA,IAAIC,KAAKA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACL,SAAS;EAAC;EACpC,IAAIK,KAAKA,CAACC,GAAG,EAAE;IAAE,IAAI,CAACN,SAAS,GAAGM,GAAG;EAAC;EACtC,IAAIC,MAAMA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACR,UAAU;EAAC;EACtC,IAAIQ,MAAMA,CAACD,GAAG,EAAE;IAAE,IAAI,CAACP,UAAU,GAAGO,GAAG;EAAC;EACxC;EACAE,aAAaA,CAACL,CAAC,EAAEC,CAAC,EAAE;IAAC,IAAI,CAACH,MAAM,CAACQ,IAAI,CAAC,IAAI,IAAI,CAACP,KAAK,CAACC,CAAC,EAACC,CAAC,CAAC,CAAC;EAAA;AAChE;AAEA,MAAMM,IAAI,GAAG,IAAIb,GAAG,CAAC,CAAC;AAEtBc,KAAK,CAACf,GAAG,CAAC,CACGgB,IAAI,CAACC,CAAC,IAAEA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACjBF,IAAI,CAACE,IAAI,IAAE;EACN,IAAIC,KAAK,GAAID,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;EAC7BN,IAAI,CAACL,KAAK,GAAGY,QAAQ,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/BL,IAAI,CAACH,MAAM,GAAGU,QAAQ,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;EAChCL,IAAI,CAACF,aAAa,CAACS,QAAQ,CAACF,KAAK,CAAC,EAAE,CAAC,CAAC,EAAEE,QAAQ,CAACF,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC;AAEd,eAAeL,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}