{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jed00\\\\Documents\\\\PROTO_REACT_EXPRESS\\\\frontend\\\\src\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport map1, { predators, grazers, plants, obstacles } from './InitialFile.js';\n//const map1 = require('./InitialFile.js');\n// const {predators} = require('./InitialFile.js');\n// const {grazers} = require('./InitialFile.js');\n// const {plants} = require('./InitialFile.js');\n// const {obstacles} = require('./InitialFile.js');\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction drawLine(ctx, x1, y1, x2, y2, bColor) {\n  ctx.beginPath();\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.lineWidth = .5;\n  ctx.strokeStyle = bColor;\n  ctx.fillStyle = bColor;\n  ctx.fill();\n  ctx.stroke();\n}\n;\n//draws a big line that looks like a square\n\nfunction drawBlock(ctx, x1, y1, bColor) {\n  ctx.beginPath();\n  ctx.moveTo(x1, y1 + 5);\n  ctx.lineTo(x1 + 10, y1 + 5);\n  ctx.lineWidth = 10;\n  ctx.strokeStyle = bColor;\n  ctx.stroke();\n}\n;\nfunction drawCircle(ctx, x1, y1, d1, bColor) {\n  ctx.beginPath();\n  ctx.arc(x1 + 5, y1 + 5, d1 / 2, 0, 2 * Math.PI);\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = bColor;\n  ctx.fillStyle = bColor;\n  ctx.fill();\n  ctx.stroke();\n}\n;\nconst Canvas = props => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.canvas.width = map1.width;\n    context.canvas.height = map1.height;\n    context.canvas.style = \"border:1px solid #000000;\";\n\n    //Our draw come here\n    for (let i = 25; i < context.canvas.width; i += 25) {\n      drawLine(context, i, 0, i, context.canvas.height, \"black\");\n    }\n    for (let i = 25; i < context.canvas.height; i += 25) {\n      drawLine(context, 0, i, context.canvas.width, i, \"#000000\");\n    }\n    for (let i = 0; i < map1.num_plants; i++) {\n      drawCircle(context, plants[i].x_coord, plants[i].y_coord, plants[i].diam, \"green\");\n    }\n    for (let i = 0; i < map1.num_obstacles; i++) {\n      drawCircle(context, obstacles[i].x_coord, obstacles[i].y_coord, obstacles[i].diam, \"grey\");\n    }\n    for (let i = 0; i < map1.num_grazers; i++) {\n      drawBlock(context, grazers[i].x_coord, grazers[i].y_coord, \"blue\");\n    }\n    for (let i = 0; i < map1.num_predators; i++) {\n      drawBlock(context, predators[i].x_coord, predators[i].y_coord, \"red\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Test map width = \", map1.map_width]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","map1","predators","grazers","plants","obstacles","jsxDEV","_jsxDEV","Fragment","_Fragment","drawLine","ctx","x1","y1","x2","y2","bColor","beginPath","moveTo","lineTo","lineWidth","strokeStyle","fillStyle","fill","stroke","drawBlock","drawCircle","d1","arc","Math","PI","Canvas","props","_s","canvasRef","canvas","current","context","getContext","width","height","style","i","num_plants","x_coord","y_coord","diam","num_obstacles","num_grazers","num_predators","children","map_width","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/jed00/Documents/PROTO_REACT_EXPRESS/frontend/src/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport map1, {predators, grazers, plants, obstacles} from './InitialFile.js';\r\n//const map1 = require('./InitialFile.js');\r\n// const {predators} = require('./InitialFile.js');\r\n// const {grazers} = require('./InitialFile.js');\r\n// const {plants} = require('./InitialFile.js');\r\n// const {obstacles} = require('./InitialFile.js');\r\n\r\n\r\nfunction drawLine(ctx, x1, y1, x2, y2, bColor)\r\n{\r\n  ctx.beginPath();\r\n  ctx.moveTo(x1, y1);\r\n  ctx.lineTo(x2, y2);\r\n  ctx.lineWidth = .5;\r\n  ctx.strokeStyle = bColor;\r\n  ctx.fillStyle = bColor;\r\n  ctx.fill();\r\n  ctx.stroke();\r\n};\r\n    //draws a big line that looks like a square\r\n\r\n\r\nfunction drawBlock(ctx, x1, y1, bColor)\r\n{\r\n  ctx.beginPath();\r\n  ctx.moveTo(x1, y1+5);\r\n  ctx.lineTo(x1+10, y1+5);\r\n  ctx.lineWidth = 10;\r\n  ctx.strokeStyle = bColor;\r\n  ctx.stroke();\r\n};\r\n\r\nfunction drawCircle(ctx, x1, y1, d1, bColor)\r\n{\r\n  ctx.beginPath();\r\n  ctx.arc(x1+5, y1+5, d1/2, 0, 2*Math.PI);\r\n  ctx.lineWidth = 1;\r\n  ctx.strokeStyle = bColor;\r\n  ctx.fillStyle = bColor;\r\n  ctx.fill();\r\n  ctx.stroke();\r\n};\r\n\r\n\r\nconst Canvas = props => {\r\n    const canvasRef = useRef(null)    \r\n\r\n\r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current;\r\n      const context = canvas.getContext('2d');\r\n      context.canvas.width = map1.width;\r\n      context.canvas.height = map1.height;\r\n      context.canvas.style = \"border:1px solid #000000;\";\r\n\r\n      //Our draw come here\r\n       for(let i = 25; i < context.canvas.width; i+=25)\r\n      {\r\n        drawLine(context, i, 0, i, context.canvas.height, \"black\");\r\n      }\r\n      for(let i = 25; i < context.canvas.height; i+=25)\r\n      {\r\n        drawLine(context, 0, i, context.canvas.width, i, \"#000000\");\r\n      }\r\n      for (let i = 0; i < map1.num_plants; i++)\r\n      {\r\n        drawCircle(context, plants[i].x_coord, plants[i].y_coord, plants[i].diam,\"green\");\r\n      }\r\n      for (let i = 0; i < map1.num_obstacles; i++)\r\n      {\r\n        drawCircle(context, obstacles[i].x_coord, obstacles[i].y_coord, obstacles[i].diam,\"grey\");\r\n      }\r\n      for (let i = 0; i < map1.num_grazers; i++)\r\n      {\r\n        drawBlock(context, grazers[i].x_coord, grazers[i].y_coord,\"blue\");\r\n     }\r\n     for (let i = 0; i < map1.num_predators; i++)\r\n      {\r\n        drawBlock(context, predators[i].x_coord, predators[i].y_coord,\"red\");\r\n     }\r\n    }, []);\r\n    \r\n    return (<>\r\n    <p>Test map width = {map1.map_width}</p>\r\n    <canvas ref={canvasRef} {...props}/>\r\n    </>);\r\n  \r\n  };\r\n  \r\n\r\n  export default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}