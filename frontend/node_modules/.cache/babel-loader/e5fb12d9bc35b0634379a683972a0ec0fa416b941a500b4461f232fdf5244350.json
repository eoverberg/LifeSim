{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jed00\\\\Documents\\\\PROTO_REACT_EXPRESS\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n//used to get file from website\n// three way to pass a student name, url/ form data/ local storage\n// currently using url\nimport React, { createRef } from \"react\";\nimport './App.css';\nimport { useLocalStorage } from \"./useLocaleStorage\";\n//let file \n\n//https://youtu.be/73SpYrjsNlk?si=ziNN44rcPouppVKA\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const fileInput = /*#__PURE__*/createRef(); //creates empty reference to use form data\n  const nameInput = /*#__PURE__*/createRef();\n  const [nameIn, setName] = useLocalStorage(\"name2\", \"\");\n  ; //to get student name from storage\n  const urlName = window.location.pathname; //to get student name from url\n\n  //function for button push \n  //send data to server\n  const onSubmit = async e => {\n    //prevents website refresh\n    e.preventDefault();\n\n    //creates form data to send \n    const formData = new FormData();\n    //formData.set(\"userName\", nameInput.current.value) //to send user enter name to file storage \n    formData.set(\"avatar\", fileInput.current.files[0]);\n\n    //http request to backend\n    try {\n      const response = await fetch(`/profile/${urlName}`, {\n        //send student name as parameter\n        method: \"POST\",\n        body: formData\n      });\n      await response.json();\n      if (response.ok) {\n        alert(\"File uploaded\"); //popup after submission\n      } else {\n        console.error(\"some error occured\");\n      }\n    } catch (e) {\n      console.error(e.message);\n    }\n  };\n\n  //html to display\n  //textbox was experiment for multiuser, probably dont need\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"demo\",\n      children: \"Upload Initial File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"userName\",\n        ref: nameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"avatar\",\n        ref: fileInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 4\n  }, this);\n}\n_s(App, \"S//Dip7JgYolMfefu2+27kqQHOA=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","createRef","useLocalStorage","jsxDEV","_jsxDEV","App","props","_s","fileInput","nameInput","nameIn","setName","urlName","window","location","pathname","onSubmit","e","preventDefault","formData","FormData","set","current","files","response","fetch","method","body","json","ok","alert","console","error","message","children","id","fileName","_jsxFileName","lineNumber","columnNumber","type","name","ref","value","_c","$RefreshReg$"],"sources":["C:/Users/jed00/Documents/PROTO_REACT_EXPRESS/frontend/src/App.js"],"sourcesContent":["//used to get file from website\n// three way to pass a student name, url/ form data/ local storage\n// currently using url\nimport React, {createRef} from \"react\";\nimport './App.css';\nimport { useLocalStorage } from \"./useLocaleStorage\";\n//let file \n\n//https://youtu.be/73SpYrjsNlk?si=ziNN44rcPouppVKA\nfunction App(props) {\n  const fileInput = createRef(); //creates empty reference to use form data\n  const nameInput = createRef();\n  const [nameIn, setName] = useLocalStorage(\"name2\", \"\");; //to get student name from storage\n  const urlName = window.location.pathname; //to get student name from url\n  \n  //function for button push \n  //send data to server\n  const onSubmit = async (e) => {\n    //prevents website refresh\n    e.preventDefault();\n    \n    //creates form data to send \n    const formData = new FormData();\n    //formData.set(\"userName\", nameInput.current.value) //to send user enter name to file storage \n    formData.set(\"avatar\", fileInput.current.files[0]);\n\n    //http request to backend\n    try{\n        const response = await fetch(`/profile/${urlName}`,{ //send student name as parameter\n            method: \"POST\",\n            body: formData \n        });\n        await response.json();\n        if (response.ok) {\n            alert(\"File uploaded\"); //popup after submission\n        } else {\n            console.error(\"some error occured\");\n        }\n    }catch (e) {\n        console.error(e.message)\n    }\n    }\n\n    //html to display\n    //textbox was experiment for multiuser, probably dont need\n   return (\n   <div>\n      <h2 id=\"demo\">Upload Initial File</h2>\n           <form onSubmit={onSubmit}>\n                <input type=\"text\" name=\"userName\" ref={nameInput}/>\n                <input type=\"file\" name=\"avatar\" ref={fileInput}/> \n                <input type=\"submit\" value=\"Submit\"/>\n                \n           </form>\n   </div>\n   );\n\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAO,WAAW;AAClB,SAASC,eAAe,QAAQ,oBAAoB;AACpD;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClB,MAAMC,SAAS,gBAAGP,SAAS,CAAC,CAAC,CAAC,CAAC;EAC/B,MAAMQ,SAAS,gBAAGR,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACS,MAAM,EAAEC,OAAO,CAAC,GAAGT,eAAe,CAAC,OAAO,EAAE,EAAE,CAAC;EAAC,CAAC,CAAC;EACzD,MAAMU,OAAO,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAC;;EAE1C;EACA;EACA,MAAMC,QAAQ,GAAG,MAAOC,CAAC,IAAK;IAC5B;IACAA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/B;IACAD,QAAQ,CAACE,GAAG,CAAC,QAAQ,EAAEb,SAAS,CAACc,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;;IAElD;IACA,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,YAAWb,OAAQ,EAAC,EAAC;QAAE;QACjDc,MAAM,EAAE,MAAM;QACdC,IAAI,EAAER;MACV,CAAC,CAAC;MACF,MAAMK,QAAQ,CAACI,IAAI,CAAC,CAAC;MACrB,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACbC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;MAC5B,CAAC,MAAM;QACHC,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAC;MACvC;IACJ,CAAC,QAAOf,CAAC,EAAE;MACPc,OAAO,CAACC,KAAK,CAACf,CAAC,CAACgB,OAAO,CAAC;IAC5B;EACA,CAAC;;EAED;EACA;EACD,oBACA7B,OAAA;IAAA8B,QAAA,gBACG9B,OAAA;MAAI+B,EAAE,EAAC,MAAM;MAAAD,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCnC,OAAA;MAAMY,QAAQ,EAAEA,QAAS;MAAAkB,QAAA,gBACpB9B,OAAA;QAAOoC,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,GAAG,EAAEjC;MAAU;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACpDnC,OAAA;QAAOoC,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,GAAG,EAAElC;MAAU;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAClDnC,OAAA;QAAOoC,IAAI,EAAC,QAAQ;QAACG,KAAK,EAAC;MAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAGT;AAAChC,EAAA,CAhDQF,GAAG;EAAA,QAGgBH,eAAe;AAAA;AAAA0C,EAAA,GAHlCvC,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}