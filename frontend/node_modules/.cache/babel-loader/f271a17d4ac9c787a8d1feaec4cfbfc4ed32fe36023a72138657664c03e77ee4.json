{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jed00\\\\Documents\\\\PROTO_REACT_EXPRESS\\\\frontend\\\\src\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { predators, grazers, map1, plants } from './InitialFile.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = props => {\n  _s();\n  const canvasRef = useRef(null);\n  // const draw = ctx => {\n  //   for(let i = 10; i < ctx.canvas.width; i+=10)\n  //   {\n  //     drawLine(ctx, i, 0, i, ctx.canvas.height, \"black\");\n  //   }\n  //   for(let i = 10; i < ctx.canvas.height; i+=10)\n  //   {\n  //     drawLine(ctx, 0, i, ctx.canvas.width, i, \"#000000\");\n  //   }\n\n  //   //let temp = new plant();\n  //   //let temp = plant1;\n  //   for (let i = 0; i < map1.num_initial_plants; i++)\n  //   {\n  //     drawCircle(ctx, plants[i].x_coord, plants[i].y_coord, \"green\");\n  //   }\n  // }\n\n  function drawLine(ctx, x1, y1, x2, y2, bColor) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineWidth = .5;\n    ctx.strokeStyle = bColor;\n    ctx.fillStyle = bColor;\n    ctx.fill();\n    ctx.stroke();\n  }\n\n  //draws a big line that looks like a square\n  function drawBlock(ctx, x1, y1, bColor) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1 + 5);\n    ctx.lineTo(x1 + 10, y1 + 5);\n    ctx.lineWidth = 10;\n    ctx.strokeStyle = bColor;\n    ctx.stroke();\n  }\n  ;\n  function drawCircle(ctx, x1, y1, d1, bColor) {\n    ctx.beginPath();\n    ctx.arc(x1 + 5, y1 + 5, d1 / 2, 0, 2 * Math.PI);\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = bColor;\n    ctx.fillStyle = bColor;\n    ctx.fill();\n    ctx.stroke();\n  }\n  ;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.canvas.width = map1.width;\n    context.canvas.height = map1.height;\n    context.canvas.style = \"border:1px solid #000000;\";\n    //Our draw come here\n\n    for (let i = 10; i < context.canvas.width; i += 10) {\n      drawLine(context, i, 0, i, context.canvas.height, \"black\");\n    }\n    for (let i = 10; i < context.canvas.height; i += 10) {\n      drawLine(context, 0, i, context.canvas.width, i, \"#000000\");\n    }\n    //let temp = new plant();\n    //let temp = plant1;\n    for (let i = 0; i < map1.num_plants; i++) {\n      drawCircle(context, plants[i].x_coord, plants[i].y_coord, plants[i].diam, \"green\");\n    }\n    for (let i = 0; i < map1.num_grazers; i++) {\n      drawBlock(context, grazers[i].x_coord, grazers[i].y_coord, \"blue\");\n    }\n    for (let i = 0; i < map1.num_predators; i++) {\n      drawBlock(context, predators[i].x_coord, predators[i].y_coord, \"blue\");\n    }\n    //draw(context), [draw]\n  });\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 12\n  }, this);\n};\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","predators","grazers","map1","plants","jsxDEV","_jsxDEV","Canvas","props","_s","canvasRef","drawLine","ctx","x1","y1","x2","y2","bColor","beginPath","moveTo","lineTo","lineWidth","strokeStyle","fillStyle","fill","stroke","drawBlock","drawCircle","d1","arc","Math","PI","canvas","current","context","getContext","width","height","style","i","num_plants","x_coord","y_coord","diam","num_grazers","num_predators","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jed00/Documents/PROTO_REACT_EXPRESS/frontend/src/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\r\nimport {predators, grazers, map1, plants} from './InitialFile.js'\r\n\r\nconst Canvas = props => {\r\n    const canvasRef = useRef(null)    \r\n    // const draw = ctx => {\r\n    //   for(let i = 10; i < ctx.canvas.width; i+=10)\r\n    //   {\r\n    //     drawLine(ctx, i, 0, i, ctx.canvas.height, \"black\");\r\n    //   }\r\n    //   for(let i = 10; i < ctx.canvas.height; i+=10)\r\n    //   {\r\n    //     drawLine(ctx, 0, i, ctx.canvas.width, i, \"#000000\");\r\n    //   }\r\n\r\n    //   //let temp = new plant();\r\n    //   //let temp = plant1;\r\n    //   for (let i = 0; i < map1.num_initial_plants; i++)\r\n    //   {\r\n    //     drawCircle(ctx, plants[i].x_coord, plants[i].y_coord, \"green\");\r\n    //   }\r\n    // }\r\n\r\n    function drawLine(ctx, x1, y1, x2, y2, bColor){\r\n      ctx.beginPath();\r\n      ctx.moveTo(x1, y1);\r\n      ctx.lineTo(x2, y2);\r\n      ctx.lineWidth = .5;\r\n      ctx.strokeStyle = bColor;\r\n      ctx.fillStyle = bColor;\r\n      ctx.fill();\r\n      ctx.stroke();\r\n    }\r\n\r\n    //draws a big line that looks like a square\r\n    function drawBlock(ctx, x1, y1, bColor){\r\n      ctx.beginPath();\r\n      ctx.moveTo(x1, y1+5);\r\n      ctx.lineTo(x1+10, y1+5);\r\n      ctx.lineWidth = 10;\r\n      ctx.strokeStyle = bColor;\r\n      ctx.stroke();\r\n    };\r\n\r\n    function drawCircle(ctx, x1, y1, d1, bColor){\r\n      ctx.beginPath();\r\n      ctx.arc(x1+5, y1+5, d1/2, 0, 2*Math.PI);\r\n      ctx.lineWidth = 1;\r\n      ctx.strokeStyle = bColor;\r\n      ctx.fillStyle = bColor;\r\n      ctx.fill();\r\n      ctx.stroke();\r\n    };\r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current\r\n      const context = canvas.getContext('2d')\r\n      context.canvas.width = map1.width;\r\n      context.canvas.height = map1.height;\r\n      context.canvas.style = \"border:1px solid #000000;\";\r\n      //Our draw come here\r\n\r\n\r\n      for(let i = 10; i < context.canvas.width; i+=10)\r\n      {\r\n        drawLine(context, i, 0, i, context.canvas.height, \"black\");\r\n      }\r\n      for(let i = 10; i < context.canvas.height; i+=10)\r\n      {\r\n        drawLine(context, 0, i, context.canvas.width, i, \"#000000\");\r\n      }\r\n      //let temp = new plant();\r\n      //let temp = plant1;\r\n      for (let i = 0; i < map1.num_plants; i++)\r\n      {\r\n        drawCircle(context, plants[i].x_coord, plants[i].y_coord, plants[i].diam,\"green\");\r\n      }\r\n      for (let i = 0; i < map1.num_grazers; i++)\r\n      {\r\n        drawBlock(context, grazers[i].x_coord, grazers[i].y_coord,\"blue\");\r\n     }\r\n     for (let i = 0; i < map1.num_predators; i++)\r\n      {\r\n        drawBlock(context, predators[i].x_coord, predators[i].y_coord,\"blue\");\r\n     }\r\n      //draw(context), [draw]\r\n    })\r\n    \r\n    return <canvas ref={canvasRef} {...props}/>\r\n  \r\n  }\r\n\r\n  export default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}